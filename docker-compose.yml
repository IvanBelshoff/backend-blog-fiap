services:

    database:
        image: postgres
        container_name: bf-local-database
        restart: always
        ports:
            - 5436:5432
        expose:
            - "5432"
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASS}
            - POSTGRES_DB=${DB_NAME}
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - rede-bf

    backend-blog-fiap:
        container_name: bf-local-backend
        build:
            context: .
            dockerfile: Dockerfile
            args:
                PORT: ${PORT}
                HOST: ${HOST}
                NODE_ENV: ${NODE_ENV}
                DB_HOST: ${DB_HOST}
                DB_PORT: ${DB_PORT}
                DB_USER: ${DB_USER}
                DB_PASS: ${DB_PASS}
                DB_NAME: ${DB_NAME}
                JWT_SECRET: ${JWT_SECRET}
                NAME_USER_DEFAULT: ${NAME_USER_DEFAULT}
                SOBRENOME_USER_DEFAULT: ${SOBRENOME_USER_DEFAULT}
                EMAIL_USER_DEFAULT: ${EMAIL_USER_DEFAULT}
                SENHA_USER_DEFAULT: ${SENHA_USER_DEFAULT}
                SALVAR_FOTO_LOCAL: ${SALVAR_FOTO_LOCAL}
                URL: ${URL}
                GOOGLE_HOST: ${GOOGLE_HOST}
                GOOGLE_PORT: ${GOOGLE_PORT}
                MAIL_USERNAME: ${MAIL_USERNAME}
                MAIL_PASSWORD: ${MAIL_PASSWORD}
                TYPE: ${TYPE}
                PROJECT_ID: ${PROJECT_ID}
                PRIVATE_KEY_ID: ${PRIVATE_KEY_ID}
                PRIVATE_KEY: ${PRIVATE_KEY}
                CLIENT_EMAIL: ${CLIENT_EMAIL}
                CLIENT_ID: ${CLIENT_ID}
                AUTH_URI: ${AUTH_URI}
                TOKEN_URI: ${TOKEN_URI}
                AUTH_PROVIDER_X509_CERT_URL: ${AUTH_PROVIDER_X509_CERT_URL}
                CLIENT_X509_CERT_URL: ${CLIENT_X509_CERT_URL}
                UNIVERSE_DOMAIN: ${UNIVERSE_DOMAIN}
                REGRAS_PERMISSOES: ${REGRAS_PERMISSOES}
        ports:
            - "${PORT}:${PORT}"
        depends_on:
            - database
        volumes:
            - fotos_usuarios:/usr/src/app/data/fotos-usuarios
            - capas_postagens:/usr/src/app/data/capas-postagens
        networks:
            - rede-bf

    prometheus:
        image: prom/prometheus
        ports:
            - "9090:9090"
        command: 
            - --config.file=/etc/prometheus/prometheus.yml
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
        networks:
            - rede-bf
        
    grafana:
        image: grafana/grafana
        ports:
            - "3000:3000"
        networks:
            - rede-bf
        depends_on:
            - prometheus

volumes:
    pgdata:
        driver: local
    fotos_usuarios:
        driver: local
    capas_postagens:
        driver: local

networks:
    rede-bf:
        driver: bridge
